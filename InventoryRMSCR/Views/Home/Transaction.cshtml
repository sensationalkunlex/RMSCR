@model IEnumerable<InventoryRMSCR.Models.Product>
@using PagedList.Mvc;


@using InventoryRMSCR.Models
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*Use custom layout*@
@*For tblProduct Class*@


@{
    ViewBag.Title = "Record";
}

<link href="~/Content/PagedList.css" rel="stylesheet" />

@*Heading*@
<h1 class="jumbotron text-center">RMSCR Inventory App</h1>
@{int c = 0; }
@*Products*@
<table class="table table-striped table-hover table-bordered col-md-6 ">
    <tr>
        <td>S/N</td>
        <th>Name</th>
        <th>Quantity Available (Kg)</th>
        <th>Qty(Q/25Kg)</th>

        <th>AddToCart</th>
    </tr>

    @*Retrieve products from the ViewBag*@
    @foreach (var p in Model)
    {
        <tr>
            <td>
                @{c++;}  @c
            </td>
            <td>@p.ProductName</td>
            <td>@p.qty</td>
            <td>@(p.qty / 25)</td>
            <td>
                @Html.ActionLink("Add Cart", "OrderNow", "ShoppingCart", new { id = p.ProductID }, new { @class = "btn btn-primary" })
            </td>

        </tr>

                    }
    
    <tr>
        <td></td>
        <td>Total Available</td>
        <td> @ViewBag.TotalAvai</td>
        <td>@(ViewBag.TotalAvai/25)</td>
        <td></td>
    </tr>
            
        
</table>

<!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
@*@Html.PagedListPager(Model, page => Url.Action("Transaction", new { page = page }))*@
@*page @Html.PagedListPager(Model, page => Url.Action("Transaction", new { page = page }), PagedListRenderOptions.PageNumbersOnly)*@
