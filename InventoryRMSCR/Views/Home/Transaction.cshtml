@{Layout = "~/Views/Shared/_Layout.cshtml";
    
    
    } @*Use custom layout*@
@using InventoryRMSCR.Models @*For tblProduct Class*@
@*@using PagedList.Mvc; @*//import this so we get our HTML Helper*@
@*@using PagedList; @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@*@*@


@{
    ViewBag.Title = "Record";
}
<!-- import the included stylesheet for some (very basic) default styling -->
<link href="~/Content/PagedList.css" rel="stylesheet" />
@*Heading*@
<h1 class="jumbotron text-center">RMSCR Inventory App</h1>

@*Products*@
        <table class="table table-striped table-hover  col-md-6 " >
            <tr>
                <th>Name</th>
                <th>Quantity Available</th>
                <th>AddToCart</th>
            </tr>
            @*Retrieve products from the ViewBag*@
            @foreach (Product p in ViewBag.listProduct)
        {
            <tr>
                <td>@p.ProductName</td>
                <td>@p.qty</td>
                <td>
                    @Html.ActionLink("Add Cart", "OrderNow", "ShoppingCart", new { id = p.ProductID }, new { @class = "btn btn-default" })
                </td>

            </tr>
    }
        </table>
    </div>
</div>
<!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
@*@Html.PagedListPager((IPagedList)ViewBag.ListProducts, page => Url.Action("Index", new { page }))*@
